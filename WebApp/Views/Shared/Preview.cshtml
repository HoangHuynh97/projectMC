@using DevExpress.XtraReports.Web;
@Html.DevExpress().DocumentViewer(st =>
{
   st.Name = "reportViewer";
   st.Width = Unit.Percentage(100);
   st.Height = 300;
   var itRefresh = new ReportToolbarButton();
   itRefresh.Name = "refresh";
   itRefresh.Text = T("Làm mới");
   itRefresh.IconID = IconID.ActionsRefresh16x16;
   itRefresh.ToolTip = T("Cập nhật lại báo cáo với dữ liệu mới nhất (F5)");
   st.ToolbarItems.Add(itRefresh);
   var itFilter = new ReportToolbarButton();
   itFilter.Name = "filter";
   itFilter.Text = T("Lọc dữ liệu");
   itFilter.IconID = IconID.ActionsFilter16x16devav;
   itFilter.ToolTip = T("Cập nhật lại báo cáo với điều kiện lọc khác (F5)");
   st.ToolbarItems.Add(itFilter);
   if (Context.CheckPermission("WebApp.dll", "Mẫu báo cáo", "Thiết kế mẫu"))
   {
      var itDesigner = new ReportToolbarButton();
      itDesigner.Name = "designer";
      itDesigner.Text = T("Thiết kế");
      itDesigner.IconID = IconID.ReportsDesignreport16x16;
      itDesigner.ToolTip = T("Mở chức năng chỉnh sửa báo cáo");
      st.ToolbarItems.Add(itDesigner);
   }
   var itClose = new ReportToolbarButton();
   itClose.Name = "close";
   itClose.Text = T("Đóng");
   itClose.IconID = IconID.ActionsClose16x16;
   itClose.ToolTip = T("Đóng chức năng này (ESC)");
   st.ToolbarItems.Add(itClose);
   st.CallbackRouteValues = new { Action = "Preview" };
   st.ExportRouteValues = new { Action = "Export" };
   st.Report = Session[WebApp.Controllers.ReportViewerController.ReportKey] as DevExpress.XtraReports.UI.XtraReport;
   st.SettingsReportViewer.EnableReportMargins = true;
   st.ClientSideEvents.ToolbarItemClick = "WebApp.function.toolClick";
   st.ClientSideEvents.Init = "function(s) {WebApp.function.viewerInit(s);}";
}).GetHtml()
