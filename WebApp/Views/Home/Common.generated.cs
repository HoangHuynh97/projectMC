#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.UI.WebControls;
    using System.Web.WebPages;
    using DevExpress.Utils;
    using DevExpress.Web;
    using DevExpress.Web.ASPxThemes;
    using DevExpress.Web.Mvc;
    using DevExpress.Web.Mvc.UI;
    using WebApp.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Home/Common.cshtml")]
    public partial class _Views_Home_Common_cshtml : WebApp.Core.BaseWebViewPage<dynamic>
    {
        public _Views_Home_Common_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
   //String functions
   if (typeof String.prototype.startsWith != 'function') {
      String.prototype.startsWith = function (str) {
         return this.slice(0, str.length) == str;
      };
   }

   if (typeof String.prototype.endsWith != 'function') {
      String.prototype.endsWith = function (str) {
         return this.slice(-str.length) == str;
      };
   }

   if (typeof String.prototype.format != 'function') {
      String.prototype.format = function () {
         var args = arguments;
         return this.replace(/{(\d+)}/g, function (match, number) {
            return typeof args[number] != 'undefined'
               ? args[number]
               : match
               ;
         });
      };
   }

   //Number functions
   if (typeof Number.prototype.format != 'function') {
      Number.prototype.format = function (str) {
         return ASPx.NumberFormatter.Format(str || 'N0', this);
      }
   }
   if (typeof Number.prototype.round != 'function') {
      Number.prototype.round = function (decimals) {
         return Number(Math.round(this + 'e' + decimals) + 'e-' + decimals);
      }
   }


   const cssMenuActive = 'current-active-menu';
   //MAIN OBJECT
   var WebApp = {
      title: '");

            
            #line 43 "..\..\Views\Home\Common.cshtml"
         Write(H("Quản lý trực tuyến"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n      //message\r\n      message: {\r\n         error: \'");

            
            #line 46 "..\..\Views\Home\Common.cshtml"
            Write(H("Lỗi"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n         errData: \'");

            
            #line 47 "..\..\Views\Home\Common.cshtml"
              Write(H("Lỗi dữ liệu."));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n         errServer: \'");

            
            #line 48 "..\..\Views\Home\Common.cshtml"
                Write(H("Có lỗi trong quá trình xử lý, vui lòng làm mới lại trang."));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n         saved: \'");

            
            #line 49 "..\..\Views\Home\Common.cshtml"
            Write(H("Cập nhật dữ liệu thành công"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n         delete: \'");

            
            #line 50 "..\..\Views\Home\Common.cshtml"
             Write(H("Xóa"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n         deleteConfirm: \'");

            
            #line 51 "..\..\Views\Home\Common.cshtml"
                    Write(H("Bạn có muốn xóa dữ liệu này không?"));

            
            #line default
            #line hidden
WriteLiteral("\'\r\n      },\r\n\r\n      //hotkeys\r\n      hotkeys: {\r\n         data: [],\r\n         cu" +
"rrent: null,\r\n         active: function (cfg) { //active current hot key have ke" +
"y is keycode(string) and value is function\r\n            this.current = cfg;\r\n   " +
"         this.data.push(cfg);\r\n         },\r\n         deactive: function (cfg) { " +
"//remove hotkey was register\r\n            this.data.splice(this.data.indexOf(cfg" +
"), 1);\r\n            if (cfg == this.current) {\r\n               if (this.data.len" +
"gth > 0)\r\n                  this.current = this.data[this.data.length - 1];\r\n   " +
"            else\r\n                  this.current = null;\r\n            }\r\n       " +
"  }\r\n      },\r\n\r\n      //loading\r\n      _curLoading: 0,\r\n      _loadingTimer: nu" +
"ll,\r\n      loading: function (b) {\r\n         if (b === true) {\r\n            if (" +
"this._curLoading == 0)\r\n               this._loadingTimer = setTimeout(function " +
"() { panelLoading.Show(); }, 1000);\r\n            this._curLoading++;\r\n         }" +
"\r\n         else if (b === false) {\r\n            if (this._curLoading > 0)\r\n     " +
"          this._curLoading--;\r\n            if (this._curLoading == 0) {\r\n       " +
"        clearTimeout(this._loadingTimer);\r\n               this._loadingTimer = n" +
"ull;\r\n               panelLoading.Hide();\r\n            }\r\n         }\r\n         r" +
"eturn this._curLoading;\r\n      },\r\n\r\n      //popup message\r\n      showInfo: func" +
"tion (title, message) {\r\n         var df = $.Deferred();\r\n         var popup = p" +
"opupMessageBoxInfo;\r\n         popup._deffered = df;\r\n         popup.SetHeaderTex" +
"t(title);\r\n         $(\'#messageinfo\').html(message);\r\n         popup.Show();\r\n  " +
"       var keys = {\r\n            \'esc\': function () {\r\n               btnCloseMe" +
"ssageBoxInfo.DoClick();\r\n            }\r\n         };\r\n         this.hotkeys.activ" +
"e(keys);\r\n         df.then(function () {\r\n            WebApp.hotkeys.deactive(ke" +
"ys);\r\n         });\r\n         return df;\r\n      },\r\n\r\n      showConfirm: function" +
" (title, message) {\r\n         var df = $.Deferred();\r\n         var popup = popup" +
"MessageBoxConfirm;\r\n         popup._deffered = df;\r\n         popup.SetHeaderText" +
"(title);\r\n         $(\'#messageconfirm\').html(message);\r\n         popup.Show();\r\n" +
"         var keys = {\r\n            \'enter\': function () {\r\n               btnOkM" +
"essageBoxConfirm.DoClick();\r\n            },\r\n            \'esc\': function () {\r\n " +
"              btnCancelMessageBoxConfirm.DoClick();\r\n            },\r\n         };" +
"\r\n         this.hotkeys.active(keys);\r\n         df.then(function () {\r\n         " +
"   WebApp.hotkeys.deactive(keys);\r\n         });\r\n         return df;\r\n      },\r\n" +
"\r\n      //post ajax\r\n      ajax: function (url, data, method) {\r\n         if (!m" +
"ethod) method = \'post\';\r\n         var df = $.Deferred();\r\n         $.ajax({\r\n   " +
"         method: method,\r\n            url: url,\r\n            data: data, //all f" +
"unction properties will be executed\r\n         }).done(function (data, status, xh" +
"r) {\r\n            var t = xhr.getResponseHeader(\'content-type\');\r\n            if" +
" (t == null || t.indexOf(\'javascript\') !== -1) {\r\n               //javascript ru" +
"n\r\n               df.reject();\r\n            }\r\n            else {\r\n             " +
"  df.resolve(data);\r\n            }\r\n         }).fail(function () {\r\n            " +
"WebApp.showInfo(WebApp.message.error, WebApp.message.errServer);\r\n            co" +
"nsole.log(arguments);\r\n            df.reject();\r\n         });\r\n\r\n         return" +
" df;\r\n      },\r\n\r\n      //open menu\r\n      openMenu: function (url) {\r\n         " +
"var old = WebApp.function;\r\n         WebApp.loading(true);\r\n         return this" +
".ajax(url, null, \'get\').done(function (r) {\r\n            try {\r\n               /" +
"/set active menu\r\n               $(\'.\' + cssMenuActive).removeClass(cssMenuActiv" +
"e);\r\n               const mnItem = ribbonMainMenu.GetItemByName(url);\r\n         " +
"      if (mnItem && mnItem.element) {\r\n                  $(mnItem.element).addCl" +
"ass(cssMenuActive);\r\n               }\r\n\r\n               $(\'.main-content\').html(" +
"r);\r\n               WebApp.resize();\r\n               if (window.grdSheet) //auto" +
" resize for grdSheet\r\n                  window.grdSheet.autoColumnWidth();\r\n    " +
"           old && old.hotkey && WebApp.hotkeys.deactive(old.hotkey);\r\n          " +
"     if (WebApp.function) {\r\n                  WebApp.function.hotkey && WebApp." +
"hotkeys.active(WebApp.function.hotkey);\r\n                  document.title = WebA" +
"pp.function.title + \' | \' + WebApp.title;\r\n                  WebApp.function.ini" +
"t && WebApp.function.init();\r\n               }\r\n               ASPxClientUtils.S" +
"etCookie(\'WebApp.CurrentMenu\', url);\r\n            }\r\n            catch (ex) {\r\n " +
"              WebApp.showInfo(WebApp.message.error, WebApp.message.errData);\r\n  " +
"             console.log(ex);\r\n            }\r\n         }).always(function () { W" +
"ebApp.loading(false); });\r\n      },\r\n\r\n      //change language\r\n      changeLang" +
"uage: function (code) {\r\n         this.ajax(\'Home/ChangeLanguage\', { code: code " +
"}).done(function () { location.reload(); });\r\n      },\r\n\r\n      //change skin\r\n " +
"     changeSkin: function (name) {\r\n         this.ajax(\'Home/ChangeSkin\', { name" +
": name }).done(function () { location.reload(); });\r\n      },\r\n\r\n      //change " +
"password\r\n      changePassword: function () {\r\n         this.showDialog({\r\n     " +
"       name: \'popupChangePassword\',\r\n            url: \'Home/ChangePassword\',\r\n  " +
"          title: \'");

            
            #line 209 "..\..\Views\Home\Common.cshtml"
               Write(H("Đổi mật khẩu"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            icon: \'");

            
            #line 210 "..\..\Views\Home\Common.cshtml"
              Write(IconID.BusinessobjectsBopermission32x32);

            
            #line default
            #line hidden
WriteLiteral(@"',
            width: 300,
            init: function () { OldPassword.Focus(); }
         })
      },

      //add js validate for loaded form
      validateForm: function (el) {
         $.validator.unobtrusive.parse($(el));
         updateErrorHint();
      },

      //check form valid
      validForm: function (frm) {
         var f = $(frm);
         var b = f.valid();
         if (!b) {
            f.data('validator').focusInvalid();
         }
         return b;
      },

      //submit form
      submit: function (frm) {
         var f = $(frm);
         WebApp.loading(true);
         return WebApp.ajax(f.attr('action'), [{ name: ""X-Requested-With"", value: ""XMLHttpRequest"" }].concat(f.serializeArray()))
            .always(function () { WebApp.loading(false); });
      },

      //display a popup contains url content, has some buttons in cfg config
      _dialogs: {},
      showDialog: function (cfg) {
         WebApp.loading(true);
         var id = (new Date()).getTime();
         var config = $.extend({}, {//default config
            name: 'dialog' + id,
            title: '',
            url: '',
            data: undefined,
            icon: '");

            
            #line 250 "..\..\Views\Home\Common.cshtml"
              Write(IconID.ActionsAdditem32x32);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            maximized: false,\r\n            modal: true,\r\n            hotkey: " +
"{},\r\n            width: 300,\r\n            buttons: [\r\n               { value: \'s" +
"ubmit\', text: \'");

            
            #line 256 "..\..\Views\Home\Common.cshtml"
                                    Write(H("Đồng ý"));

            
            #line default
            #line hidden
WriteLiteral("\', icon: \'");

            
            #line 256 "..\..\Views\Home\Common.cshtml"
                                                          Write(IconID.ActionsApply16x16);

            
            #line default
            #line hidden
WriteLiteral("\', hotkey: \'f9\' },\r\n               { value: \'close\', text: \'");

            
            #line 257 "..\..\Views\Home\Common.cshtml"
                                   Write(H("Không"));

            
            #line default
            #line hidden
WriteLiteral("\', icon: \'");

            
            #line 257 "..\..\Views\Home\Common.cshtml"
                                                        Write(IconID.ActionsCancel16x16);

            
            #line default
            #line hidden
WriteLiteral("\', hotkey: \'esc\' }\r\n            ]\r\n         }, cfg);\r\n         WebApp._dialogs[co" +
"nfig.name] = config;\r\n         $.each(config.buttons, function () {\r\n           " +
" if (!this.action && this.value == \'submit\')\r\n               this.action = funct" +
"ion () {\r\n                  var self = this; //\'this\' is main config\r\n          " +
"        $.when(this.beforeSubmit && this.beforeSubmit()).done(function (v) {\r\n  " +
"                   if (v === false) return;\r\n                     WebApp.validFo" +
"rm(self.form) && WebApp.submit(self.form)\r\n                        .done(functio" +
"n (r) {\r\n                           if (r && typeof(r) == \'string\') //invalid mo" +
"delstate\r\n                              $(\'#dialogContainer\' + config.name + \' ." +
"dialogcontent\').html(r);\r\n                           else {\r\n                   " +
"           self.popup.Hide();\r\n                              self.deferred.resol" +
"ve(r);\r\n                           }\r\n                        });\r\n             " +
"     });\r\n               }\r\n            else if (!this.action && this.value == \'" +
"close\')\r\n               this.action = function () {\r\n                  this.popu" +
"p.Hide();//\'this\' is main config\r\n                  this.deferred.reject();\r\n   " +
"            }\r\n\r\n            if (this.hotkey) {\r\n               var v = this.val" +
"ue;\r\n               config.hotkey[this.hotkey] = function () { var btn = window[" +
"\'btn\' + v + \'_\' + config.name]; btn.Focus(); btn.DoClick(); }\r\n            }\r\n  " +
"       });\r\n         var df = $.Deferred();\r\n         config.deferred = df;\r\n\r\n " +
"        //get content\r\n         this.ajax(cfg.url, cfg.data, \'get\').done(functio" +
"n (content) {\r\n            //create dialog\r\n            var cfgDlg = { //convert" +
" to plain object data, remove functions\r\n               name: config.name,\r\n    " +
"           title: config.title,\r\n               icon: config.icon,\r\n            " +
"   maximized: config.maximized,\r\n               modal: config.modal,\r\n          " +
"     url: config.url,\r\n               width: config.width,\r\n               butto" +
"ns: config.buttons.map(function (b) { return { value: b.value, text: b.text, ico" +
"n: b.icon }; })\r\n            };\r\n            WebApp.loading(true);\r\n            " +
"WebApp.ajax(\'Home/ShowDialog\', cfgDlg).done(function (dlgHtml) {\r\n              " +
" WebApp.loading(true);\r\n               var container = $(\'#dialog\');\r\n          " +
"     if (!container.length)\r\n                  container = $(\'<div id=\"dialog\" /" +
">\').appendTo(\'body\');\r\n               try {\r\n                  container.append(" +
"dlgHtml);\r\n                  var dlg = window[config.name];\r\n                  d" +
"lg._dialog = config;\r\n                  config.popup = dlg;\r\n                  c" +
"onfig.form = $(\'#dialogContainer\' + config.name + \' form\');\r\n                  $" +
"(\'#dialogContainer\' + config.name + \' .dialogcontent\', container).html(content);" +
"\r\n                  for (var i = 0; i < config.buttons.length; i++) {\r\n         " +
"            var btn = window[\'btn\' + config.buttons[i].value + \'_\' + config.name" +
"];\r\n                     btn._dialog = config;\r\n                     btn._value " +
"= config.buttons[i].value;\r\n                     btn._action = config.buttons[i]" +
".action;\r\n                     btn._deffered = df;\r\n                     btn.Cli" +
"ck.AddHandler(function (s, e) {\r\n                        s._action && s._action." +
"apply(s._dialog);//call \'action\' with \'this\' is main config\r\n                   " +
"  });\r\n                  }\r\n                  dlg.CloseUp.AddHandler(function (s" +
", e) {\r\n                     if (!config.buttons.length)\r\n                      " +
"  df.resolve();\r\n                     $.each(s._dialog.buttons, function () {\r\n " +
"                       delete window[\'btn\' + this.value + \'_\' + s._dialog.name];" +
"\r\n                     });\r\n                     delete window[s._dialog.name];\r" +
"\n                     delete WebApp._dialogs[s._dialog.name];\r\n                 " +
"    $(\'#dialogContainer\' + s._dialog.name).remove();\r\n                     WebAp" +
"p.hotkeys.deactive(s._dialog.hotkey);\r\n                  });\r\n                  " +
"dlg.Shown.AddHandler(function (s, e) {\r\n                     WebApp.hotkeys.acti" +
"ve(config.hotkey);\r\n                     config.init && config.init();\r\n        " +
"          });\r\n                  WebApp.validateForm(\'#dialogContainer\' + config" +
".name + \' form\');\r\n                  WebApp.resizeDialog(config);\r\n             " +
"     dlg.Show();\r\n                  dlg.Focus();\r\n               }\r\n            " +
"   catch (ex) {\r\n                  WebApp.showInfo(WebApp.message.error, WebApp." +
"message.errData);\r\n                  console.log(ex);\r\n                  df.reje" +
"ct();\r\n               }\r\n               WebApp.loading(false);\r\n            }).f" +
"ail(function () { df.reject(); }).always(function () {\r\n               WebApp.lo" +
"ading(false);\r\n            });\r\n         }).fail(function () { df.reject(); }).a" +
"lways(function () {\r\n            WebApp.loading(false);\r\n         });\r\n         " +
"return df;\r\n      },\r\n\r\n      notify: function(msg, type) {\r\n         iziToast[t" +
"ype || \'success\']({\r\n            message: msg\r\n         });\r\n      },\r\n\r\n      /" +
"/exit\r\n      exit: function () {\r\n         ASPxClientUtils.SetCookie(\'WebApp.Cur" +
"rentMenu\', \'\');\r\n         location.href = \'Home/LogOff\';\r\n      },\r\n\r\n      //ac" +
"cess deny\r\n      AccessDeny() {\r\n         WebApp.showInfo(WebApp.message.error, " +
"\'");

            
            #line 377 "..\..\Views\Home\Common.cshtml"
                                           Write(H("Bạn không có quyền truy cập chức năng này!"));

            
            #line default
            #line hidden
WriteLiteral("\');\r\n      },\r\n\r\n      //update UI size\r\n      resize: function () {\r\n         $(" +
"\'.main-content\').height($(window).height() - $(\'.main-header\').height());\r\n     " +
"    WebApp.function && WebApp.function.resize && WebApp.function.resize();\r\n    " +
"     $.each(WebApp._dialogs, function (name, config) {\r\n            WebApp.resiz" +
"eDialog(config);\r\n         });\r\n      },\r\n\r\n      //update position, size of dia" +
"log popup\r\n      resizeDialog: function (config) {\r\n         if (config.popup &&" +
" !config.maximized) {\r\n            var w = config.width;\r\n            var mw = M" +
"ath.round($(window).width() * 0.9, 0);\r\n            config.popup.SetWidth(w > mw" +
" ? mw : w);\r\n            var mh = Math.round($(window).height() * 0.95, 0) - 150" +
";\r\n            $(\'#dialogContainer\' + config.name + \' .dialogcontent\').css({ \'ma" +
"x-height\': mh + \'px\' });\r\n            config.popup.UpdateWindowPosition();\r\n    " +
"     }\r\n         config.resize && config.resize.apply(config);\r\n      },\r\n\r\n    " +
"  //current opened function\r\n      function: undefined,\r\n\r\n      //close current" +
" function\r\n      closeFunction: function () {\r\n         if (!WebApp.function) re" +
"turn;\r\n         $(\'.\' + cssMenuActive).removeClass(cssMenuActive);\r\n         Web" +
"App.function.hotkey && WebApp.hotkeys.deactive(WebApp.function.hotkey);\r\n       " +
"  ASPxClientUtils.SetCookie(\'WebApp.CurrentMenu\', \'\');\r\n         delete WebApp.f" +
"unction;\r\n         this.homePage();\r\n      },\r\n\r\n      //messages event\r\n      e" +
"vents: {\r\n         loggedIn: function (u) {\r\n            iziToast.info({\r\n      " +
"         message: \'");

            
            #line 419 "..\..\Views\Home\Common.cshtml"
                    Write(H("{0} đăng nhập!"));

            
            #line default
            #line hidden
WriteLiteral("\'.format(u),\r\n               icon: \'img keys iziToast-img\'\r\n            });\r\n    " +
"     },\r\n         loggedOut: function (u) {\r\n            iziToast.info({\r\n      " +
"         message: \'");

            
            #line 425 "..\..\Views\Home\Common.cshtml"
                    Write(H("{0} thoát!"));

            
            #line default
            #line hidden
WriteLiteral(@"'.format(u),
               icon: 'img exit iziToast-img'
            });
         }
      },

      showPreview: function (url, data) {
         return WebApp.ajax(url, data).done(function () {
            popupPreview.Show();
            documentViewer.SetHeight(popupPreview.GetContentHeight());
            documentViewer.Refresh();
         });
      },

      showPrint: function (url, data) {
         return WebApp.ajax(url, data).done(function () {
            documentViewer.callPrint = true;
            documentViewer.Print();
         });
      },

      selectCompany: function () {
         WebApp.closeFunction();
         WebApp.showDialog({
            name: 'popupSelectCompany',
            title: '");

            
            #line 450 "..\..\Views\Home\Common.cshtml"
               Write(H("Chọn dữ liệu"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            icon: \'");

            
            #line 451 "..\..\Views\Home\Common.cshtml"
              Write(IconID.DataDatabase32x32);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            url: \'");

            
            #line 452 "..\..\Views\Home\Common.cshtml"
             Write(Url.Action("SelectCompany"));

            
            #line default
            #line hidden
WriteLiteral("\'\r\n         });\r\n      },\r\n\r\n      homePage: function () {\r\n         this.ajax(\'");

            
            #line 457 "..\..\Views\Home\Common.cshtml"
               Write(Url.Action("HomePage"));

            
            #line default
            #line hidden
WriteLiteral("\', {}, \'get\').done(function (r) {\r\n            $(\'.main-content\').html(r);\r\n     " +
"    });\r\n      },\r\n\r\n      help: function () {\r\n         window.open(\'");

            
            #line 463 "..\..\Views\Home\Common.cshtml"
                 Write(Url.Action("Help"));

            
            #line default
            #line hidden
WriteLiteral("\', \'_blank\');\r\n      }\r\n   };\r\n\r\n\r\n   //add condition validate\r\n   $.validator.ad" +
"dMethod(\'requiredif\', function (v, e, p) {\r\n      if (p && p !== true && !window" +
"[p].call(e, v)) return true;\r\n      if (!v) return false;\r\n      return true;\r\n " +
"  });\r\n   $.validator.unobtrusive.adapters.add(\'requiredif\', [\'onlyif\'], functio" +
"n (o) {\r\n      o.rules[\'requiredif\'] = o.params.onlyif ? o.params.onlyif : true;" +
"\r\n      o.messages[\'requiredif\'] = o.message || \'\';\r\n   });\r\n\r\n   $.validator.ad" +
"dMethod(\'equaltoif\', function (v, e, p) {\r\n      if (p && p.onlyif && !window[p." +
"onlyif].call(e, v)) return true;\r\n      if (v !== window[p.other].GetValue()) re" +
"turn false;\r\n      return true;\r\n   });\r\n   $.validator.unobtrusive.adapters.add" +
"(\'equaltoif\', [\'other\', \'onlyif\'], function (o) {\r\n      var p = { other: o.para" +
"ms.other };\r\n      if (o.params.onlyif)\r\n         $.extend(p, { onlyif: o.params" +
".onlyif });\r\n      o.rules[\'equaltoif\'] = p;\r\n      o.messages[\'equaltoif\'] = o." +
"message || \'\';\r\n   });\r\n\r\n   //override keydown\r\n   $(document).keydown(function" +
" (ev) {\r\n      //change enter to tab\r\n      if (ev.which == 13 && ev.target) {\r\n" +
"         var ctrl = $(ev.target);\r\n         var name = ctrl.prop(\'tagName\');\r\n  " +
"       if (name == \'INPUT\') {\r\n            var frm = ctrl.closest(\'form\');\r\n    " +
"        if (frm.length != 0) {\r\n               var inputs = frm.find(\':input:vis" +
"ible\');\r\n               var index = inputs.index(ctrl);\r\n               if (inde" +
"x > -1 && (index + 1) < inputs.length) {\r\n                  inputs.eq(index + 1)" +
".focus();\r\n                  return false;\r\n               }\r\n            }\r\n   " +
"      }\r\n         if (name == \'TEXTAREA\') return;\r\n      }\r\n      //prevent back" +
"space\r\n      if (ev.which == 8 && ev.target && $(ev.target).prop(\'tagName\') == \'" +
"BODY\') {\r\n         return false;\r\n      }\r\n      //hotkey\r\n      if (WebApp.hotk" +
"eys.current) {\r\n         var code = ASPxClientUtils.GetShortcutCodeByEvent(ev);\r" +
"\n         for (var key in WebApp.hotkeys.current) {\r\n            if (ASPxClientU" +
"tils.StringToShortcutCode(key) == code) {\r\n               WebApp.hotkeys.current" +
"[key].call();\r\n               return false;\r\n            }\r\n         }\r\n      }\r" +
"\n   });\r\n\r\n   $(window).resize(function () { WebApp.resize(); });\r\n\r\n   //signal" +
"R\r\n   $(function () {\r\n      $.connection.messageHub.client.notify = function (m" +
"sg) {\r\n         WebApp.showInfo(\'");

            
            #line 532 "..\..\Views\Home\Common.cshtml"
                     Write(H("Thông báo"));

            
            #line default
            #line hidden
WriteLiteral("\', msg);\r\n      };\r\n      $.connection.messageHub.client.message = function (meth" +
"od, data) {\r\n         //call by current function\r\n         if (WebApp.function &" +
"& WebApp.function.events && WebApp.function.events[method]) {\r\n            WebAp" +
"p.function.events[method](data);\r\n            return;\r\n         }\r\n         //ca" +
"ll by app\r\n         if (WebApp.events[method])\r\n            WebApp.events[method" +
"](data);\r\n      };\r\n      $.connection.hub.start().fail(function (e) {\r\n        " +
" console.error(\'SignalR error\', e);\r\n      });\r\n   });\r\n\r\n   //startup code\r\n   " +
"//send widow with to server side\r\n   $.ajaxSetup({\r\n      beforeSend: function (" +
"xhr) {\r\n         xhr.setRequestHeader(\'WindowWidth\', $(window).width());\r\n      " +
"}\r\n   });\r\n\r\n   //detect change screen to update ui\r\n   function updateUIByWindo" +
"wWidth(e) {\r\n      if (e.matches && window.grdSheet) {\r\n         var cur = ASPxC" +
"lientUtils.GetCookie(\'WebApp.CurrentMenu\');\r\n         if (cur) WebApp.openMenu(c" +
"ur);\r\n      }\r\n   }\r\n   function tryMatchMedia(query) {\r\n      if (!window.match" +
"Media) return;\r\n      var m = window.matchMedia(query);\r\n      try {\r\n         /" +
"/for Chrome, FireFox, Eg, Android\r\n         m.addEventListener(\'change\', functio" +
"n (e) {\r\n            updateUIByWindowWidth(e);\r\n         });\r\n      }\r\n      cat" +
"ch {\r\n         try {\r\n            //for iOS\r\n            m.addListener(function " +
"(e) {\r\n               updateUIByWindowWidth(e);\r\n            });\r\n         }\r\n  " +
"       catch { }\r\n      }\r\n   }\r\n\r\n   tryMatchMedia(\'screen and (max-width: ");

            
            #line 584 "..\..\Views\Home\Common.cshtml"
                                     Write(WebApp.Constant.WindowWidth.ExtraSmall);

            
            #line default
            #line hidden
WriteLiteral("px)\');\r\n   tryMatchMedia(\'screen and (min-width: ");

            
            #line 585 "..\..\Views\Home\Common.cshtml"
                                     Write(WebApp.Constant.WindowWidth.ExtraSmall+1);

            
            #line default
            #line hidden
WriteLiteral("px) and (max-width: ");

            
            #line 585 "..\..\Views\Home\Common.cshtml"
                                                                                                    Write(WebApp.Constant.WindowWidth.Small);

            
            #line default
            #line hidden
WriteLiteral("px)\');\r\n   tryMatchMedia(\'screen and (min-width: ");

            
            #line 586 "..\..\Views\Home\Common.cshtml"
                                     Write(WebApp.Constant.WindowWidth.Small+1);

            
            #line default
            #line hidden
WriteLiteral("px) and (max-width: ");

            
            #line 586 "..\..\Views\Home\Common.cshtml"
                                                                                               Write(WebApp.Constant.WindowWidth.Medium);

            
            #line default
            #line hidden
WriteLiteral("px)\');\r\n   tryMatchMedia(\'screen and (min-width: ");

            
            #line 587 "..\..\Views\Home\Common.cshtml"
                                     Write(WebApp.Constant.WindowWidth.Medium+1);

            
            #line default
            #line hidden
WriteLiteral("px) and (max-width: ");

            
            #line 587 "..\..\Views\Home\Common.cshtml"
                                                                                                Write(WebApp.Constant.WindowWidth.Large);

            
            #line default
            #line hidden
WriteLiteral("px)\');\r\n   tryMatchMedia(\'screen and (min-width: ");

            
            #line 588 "..\..\Views\Home\Common.cshtml"
                                     Write(WebApp.Constant.WindowWidth.Large + 1);

            
            #line default
            #line hidden
WriteLiteral(@"px)');

   $(function () {
      if (location.hash === '#_=_') //stupid from facebook login
         location.hash = '';
      WebApp.resize();
      var cur = ASPxClientUtils.GetCookie('WebApp.CurrentMenu');
      if (cur)
         setTimeout(function () {
            WebApp.openMenu(cur);
         }, 100);
      else
         WebApp.homePage();
   });

   function updateErrorHint() {
      if ($(window).width() <= ");

            
            #line 604 "..\..\Views\Home\Common.cshtml"
                           Write(WebApp.Constant.WindowWidth.Small);

            
            #line default
            #line hidden
WriteLiteral(") {\r\n         ErrorHint.options.triggerAction = \'click\';\r\n      }\r\n      else {\r\n" +
"         ErrorHint.options.triggerAction = \'hover\';\r\n      }\r\n      ErrorHint.up" +
"date();\r\n   }\r\n</script>\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n   //setup behavour for auto new row\r\n   //cfg: {defaultValues:Object<fieldNam" +
"e:value>, requiredFields:Array<fieldName>,callbackUpdate: function(e:{visibleInd" +
"ex, col, data:{field:value}}) {return promise|undefined}, callbackChange: functi" +
"on() }\r\n   ASPxClientGridView.prototype.AutoNewRow = function (cfg) {\r\n      var" +
" self = this;\r\n      var batch = self.batchEditHelper;\r\n      var api = self.bat" +
"chEditApi;\r\n      var newKey;\r\n      var skipValidating = false;\r\n      var colE" +
"dit;\r\n      if (!batch) return;\r\n\r\n      function newRow() {\r\n         //get cod" +
"e from batchHelper.AddNewRecord.toSource()\r\n         var newRecordKeyInfo = batc" +
"h.CreateNewRecordKeyInfo();\r\n         batch.AddNewRecordCore(newRecordKeyInfo);\r" +
"\n         batch.AddInsertedKeyInfo(newRecordKeyInfo);\r\n         batch.EnsureEmpt" +
"yRecordVisibility();\r\n         newKey = newRecordKeyInfo.key;\r\n         //consol" +
"e.log(\'newkey\', newKey);\r\n         $(\'img[alt=\"Delete\"]:last\', self.GetMainTable" +
"()).toggleClass(\'dxIcon_edit_delete_16x16 dxIcon_actions_add_16x16\');\r\n      }\r\n" +
"\r\n      function updateCellValue(visibleIndex, cols, oldData, newData, callback)" +
" {\r\n         for (var i = 0; i < cols.length; i++) {\r\n            var f = batch." +
"GetColumn(cols[i]).fieldName;\r\n            if (oldData[f] != newData[f]) {\r\n    " +
"           if (batch.IsColumnEditing(cols[i]))\r\n                  batch.GetEdito" +
"r(cols[i]).SetValue(newData[f])\r\n               else\r\n                  api.SetC" +
"ellValue(visibleIndex, f, newData[f]);\r\n            }\r\n         }\r\n         if (" +
"callback)\r\n            callback.call(batch);\r\n      }\r\n\r\n      //do not check ne" +
"wKey, it will newRow and check later\r\n      //ASPxClientGridView.prototype.Raise" +
"BatchEditItemValidating.toSource()\r\n      self.RaiseBatchEditItemValidating = fu" +
"nction (visibleIndex, validationInfo) {\r\n         var args = new ASPxClientGridV" +
"iewBatchEditRowValidatingEventArgs(visibleIndex, validationInfo);\r\n         var " +
"curCol = colEdit;\r\n         var editKey = parseInt(batch.GetEditingRecordKey());" +
"\r\n         args.column = curCol;\r\n         //console.log(\'validate \', visibleInd" +
"ex, editKey, args);\r\n         if (editKey === newKey) {\r\n            //reset val" +
"id of other validate event\r\n            var cols = batch.GetEditColumnIndices();" +
"\r\n            for (var i = 0; i < cols.length; i++) {\r\n               if (valida" +
"tionInfo[cols[i]])\r\n                  validationInfo[cols[i]].isValid = true;\r\n " +
"           }\r\n            setTimeout(function () {\r\n               //check has c" +
"hanged\r\n               var changed = false;\r\n               for (var i = 0; i < " +
"cols.length; i++) {\r\n                  if (batch.IsDirtyCell(visibleIndex, cols[" +
"i])) {\r\n                     changed = true;\r\n                     break;\r\n     " +
"             }\r\n               }\r\n               if (!changed) return;\r\n        " +
"       $(\'img[alt=\"Delete\"]:last\', self.GetMainTable()).toggleClass(\'dxIcon_edit" +
"_delete_16x16 dxIcon_actions_add_16x16\');\r\n\r\n               //default\r\n         " +
"      if (cfg && cfg.defaultValues && editKey === newKey) {\r\n                  f" +
"or (var k in cfg.defaultValues) {\r\n                     var ind = api.GetColumnI" +
"ndex(k);\r\n                     if (curCol != k) {\r\n                        if (b" +
"atch.IsColumnEditing(ind)) {\r\n                           if (!batch.GetEditor(in" +
"d).GetValue())\r\n                              batch.GetEditor(ind).SetValue(cfg." +
"defaultValues[k]);\r\n                        }\r\n                        else if (" +
"!api.GetCellValue(visibleIndex, k))\r\n                           api.SetCellValue" +
"(visibleIndex, k, cfg.defaultValues[k]);\r\n                     }\r\n              " +
"    }\r\n               }\r\n\r\n               //new row and revalidate it\r\n         " +
"      var old = newKey;\r\n               var oldCol = colEdit;\r\n               ne" +
"wRow();\r\n               colEdit = curCol;\r\n               batch.UserValidateItem" +
"s(old);\r\n               colEdit = oldCol;\r\n               if (batch.GetColumn(co" +
"ls[cols.length - 1]).fieldName == curCol)\r\n                  batch.StartEdit(new" +
"Key, cols[0]);\r\n\r\n            });\r\n         }\r\n         else if (!this.BatchEdit" +
"RowValidating.IsEmpty())\r\n            this.BatchEditRowValidating.FireEvent(this" +
", args);\r\n\r\n         //callback function to update cell\'s values, after change\r\n" +
"         if (cfg && (cfg.callbackUpdate || cfg.callbackChange)) {\r\n            s" +
"etTimeout(function () {\r\n               var cols = batch.GetEditColumnIndices();" +
"\r\n               //check has changed\r\n               var changed = false;\r\n     " +
"          for (var i = 0; i < cols.length; i++) {\r\n                  if (batch.I" +
"sDirtyCell(editKey, cols[i])) {\r\n                     changed = true;\r\n         " +
"            break;\r\n                  }\r\n               }\r\n               if (!c" +
"hanged) return;\r\n\r\n               if (cfg.callbackUpdate) {\r\n                  v" +
"ar param = { visibleIndex: visibleIndex, column: curCol, data: {} };\r\n          " +
"        for (var i = 0; i < cols.length; i++) {\r\n                     param.data" +
"[batch.GetColumn(cols[i]).fieldName] = api.GetCellValue(visibleIndex, cols[i]);\r" +
"\n                  }\r\n                  param.data[self.keyName] = editKey;\r\n   " +
"               var oldData = $.extend({}, param.data);\r\n                  $.when" +
"(cfg.callbackUpdate.call(batch, param)).done(function () {\r\n                    " +
" //console.log(\'update \', param);\r\n                     updateCellValue(visibleI" +
"ndex, cols, oldData, param.data, cfg.callbackChange);\r\n                  });\r\n  " +
"             }\r\n               else if (cfg.callbackChange) {\r\n                 " +
" cfg.callbackChange.call(batch);\r\n               }\r\n            });\r\n         }\r" +
"\n\r\n         return args.validationInfo;\r\n      }\r\n\r\n      self.BatchEditStartEdi" +
"ting.AddHandler(function (sender, e) {\r\n         if (e.cancel) return;\r\n        " +
" //console.log(\'start \', e.visibleIndex);\r\n         colEdit = e.focusedColumn.fi" +
"eldName;\r\n      });\r\n\r\n      //cancel delete newKey\r\n      self.RaiseBatchEditIt" +
"emDeleting = function (visibleIndex, itemValues) {\r\n         //console.log(\'dele" +
"ting \', visibleIndex, itemValues, batch.GetEditingRecordKey());\r\n         if (vi" +
"sibleIndex === newKey) return true;\r\n\r\n         if (cfg && cfg.callbackChange)\r\n" +
"            setTimeout(function () { cfg.callbackChange.call(batch) });\r\n\r\n     " +
"    if (!self.BatchEditRowDeleting.IsEmpty()) {\r\n            var args = new ASPx" +
"ClientGridViewBatchEditRowDeletingEventArgs(visibleIndex, itemValues);\r\n        " +
"    self.BatchEditRowDeleting.FireEvent(self, args);\r\n            return args.ca" +
"ncel;\r\n         }\r\n         return false;\r\n      }\r\n\r\n      //remove newKey befo" +
"re update\r\n      self.UpdateEdit = function () {\r\n         batch.RemoveInsertedK" +
"eyInfo(newKey);\r\n         ASPxClientGridView.prototype.UpdateEdit.apply(self);\r\n" +
"      }\r\n\r\n      //add newRow if cancel update\r\n      self.CancelEdit = function" +
" () {\r\n         ASPxClientGridView.prototype.CancelEdit.apply(self);\r\n         n" +
"ewRow();\r\n      }\r\n\r\n      //newRow after request\r\n      self.EndCallback.AddHan" +
"dler(function (sender, e) {\r\n         newRow();\r\n      });\r\n\r\n      //create new" +
" row\r\n      self.NewRow = function () {\r\n         //change del icon\r\n         $(" +
"\'img[alt=\"Delete\"]:last\', self.GetMainTable()).toggleClass(\'dxIcon_edit_delete_1" +
"6x16 dxIcon_actions_add_16x16\');\r\n         newRow();\r\n         return newKey;\r\n " +
"     };\r\n\r\n      //auto check required\r\n      if (cfg && cfg.requiredFields && c" +
"fg.requiredFields.length) {\r\n         self.BatchEditRowValidating.AddHandler(fun" +
"ction (sender, e) {\r\n            for (var i = 0; i < cfg.requiredFields.length; " +
"i++) {\r\n               var col = self.GetColumnByField(cfg.requiredFields[i]);\r\n" +
"               if (!col) return;\r\n               var v = e.validationInfo[col.in" +
"dex];\r\n               if (!v.value) {\r\n                  v.isValid = false;\r\n   " +
"               v.errorText = WebApp.message.required;\r\n               }\r\n       " +
"     }\r\n         });\r\n      }\r\n\r\n      //init new row\r\n      newRow();\r\n   }\r\n\r\n" +
"\r\n   //check data valid\r\n   ASPxClientGridView.prototype.IsValid = function () {" +
"\r\n      return this.batchEditHelper.CanUpdate();\r\n   }\r\n\r\n   //get number of row" +
", exclude new row\r\n   ASPxClientGridView.prototype.GetCount = function () {\r\n   " +
"   return this.GetVisibleRowsOnPage() - 1;\r\n   }\r\n\r\n   //get total value of colu" +
"mn by field name\r\n   ASPxClientGridView.prototype.GetTotal = function (field) {\r" +
"\n      var batch = this.batchEditHelper;\r\n      var inds = batch.GetRecordKeys(t" +
"rue); //not include deleted\r\n      var total = 0;\r\n      var col = this.GetColum" +
"nByField(field);\r\n      for (var i = 0; i < inds.length - 1; i++) { //ignore new" +
"row\r\n         total += parseFloat(batch.GetCellValue(inds[i], col.index)) || 0;\r" +
"\n      }\r\n      return total;\r\n   }\r\n\r\n   //get array of modified data\r\n   ASPxC" +
"lientGridView.prototype.GetChanged = function () {\r\n      var batch = this.batch" +
"EditHelper;\r\n      var result = [];\r\n      if (!batch.EndEdit(true)) return resu" +
"lt;\r\n      var edit = batch.GetEditState();\r\n      var key = this.keyName;\r\n    " +
"  $.each(edit.insertedRowValues, function (k, v) {\r\n         if (batch.insertedV" +
"alues[k] && batch.deletedItemKeys.indexOf(k) == -1) {//not new row\r\n            " +
"var r = {};\r\n            r[key] = k;\r\n            $.extend(r, v);\r\n            r" +
"esult.push(r);\r\n         }\r\n      });\r\n      $.each(edit.modifiedRowValues, func" +
"tion (k, v) {\r\n         if (batch.deletedItemKeys.indexOf(k) == -1) {\r\n         " +
"   var r = {};\r\n            r[key] = k;\r\n            $.extend(r, v);\r\n          " +
"  result.push(r);\r\n         }\r\n      });\r\n      $.each(edit.deletedRowKeys, func" +
"tion (_, k) {\r\n         var r = {};\r\n         r[key] = k;\r\n         r.Deleted = " +
"true;\r\n         result.push(r);\r\n      });\r\n      return result;\r\n   }\r\n\r\n   //r" +
"eset table layout and set width of columns base on content (resize by broswer)\r\n" +
"   ASPxClientGridView.prototype.autoColumnWidth = function () {\r\n      //functio" +
"n autowidth() {\r\n      //   var tbl = this.GetMainElement();\r\n      //   var tds" +
" = $(\'[class*=dxgvTable]:lt(2) .dxgvArm td:not(\".dxgvDI\")\', tbl).not(\'[style*=\"w" +
"idth\"]\');\r\n      //   if (tds.length < 4) return;\r\n      //   $(\'[class*=dxgvTab" +
"le]:lt(2)\', tbl).css(\'table-layout\', \'auto\');\r\n      //   var max = tds.length /" +
" 2;\r\n      //   for (var i = 0; i < max - 1; i++) {\r\n      //      $(tds[i]).wid" +
"th($(tds[i + max]).width());\r\n      //   }\r\n      //   for (var i = 0; i < max -" +
" 1; i++) {\r\n      //      $(tds[max + i]).width($(tds[i]).width());\r\n      //   " +
"}\r\n      //}\r\n      //this.EndCallback.AddHandler(function (s, e) {\r\n      //   " +
"autowidth.apply(s);\r\n      //});\r\n      //autowidth.apply(this);\r\n   };\r\n\r\n   //" +
"set custom filter\r\n   WebApp.CustomFilterDictionary = {\r\n      \'a\': \'[aáàảãạâấầẩ" +
"ẫậăắằẳẵặ]\',\r\n      \'e\': \'[eéèẻẽẹêếềểễệ]\',\r\n      \'i\': \'[iíìỉĩị]\',\r\n      \'o\': \'[" +
"oóòỏõọôốồổỗộơớờởỡợ]\',\r\n      \'u\': \'[uúùủũụưứừửữự]\',\r\n      \'y\': \'[yýỳỷỹỵ]\',\r\n   " +
"   \'d\': \'[dđ]\'\r\n   };\r\n   WebApp.getCustomFilterRegExp = function (filter) {\r\n  " +
"    var s = \'\';\r\n      for (var i = 0; i < filter.length; i++) {\r\n         s += " +
"WebApp.CustomFilterDictionary[filter[i]] || filter[i];\r\n      }\r\n      return ne" +
"w RegExp(s, \'gi\');\r\n   };\r\n\r\n   ASPxClientComboBox.prototype.SetCustomFilter = f" +
"unction () {\r\n      var cols = arguments;\r\n      var inds = [];\r\n      for (var " +
"i = 0; i < cols.length; i++) {\r\n         var j = this.listBox.columnFieldNames.i" +
"ndexOf(cols[i]);\r\n         if (j !== -1)\r\n            inds.push(j);\r\n      }\r\n  " +
"    this.ItemFiltering.AddHandler(function (s, e) {\r\n         try {\r\n           " +
" var reg = WebApp.getCustomFilterRegExp(e.filter);\r\n            if (inds.length)" +
" {\r\n               e.isFit = false;\r\n               for (var i = 0; i < cols.len" +
"gth; i++) {\r\n                  e.isFit = reg.test(e.item.texts[inds[i]]);\r\n     " +
"             if (e.isFit)\r\n                     return;\r\n               }\r\n     " +
"       }\r\n            else\r\n               e.isFit = reg.test(e.item.text);\r\n   " +
"      }\r\n         catch (ex) { }\r\n      });\r\n      this.CustomHighlighting.AddHa" +
"ndler(function (s, e) {\r\n         try {\r\n            var reg = WebApp.getCustomF" +
"ilterRegExp(e.filter);\r\n            if (inds.length) {\r\n               e.highlig" +
"hting = {};\r\n               for (var i = 0; i < cols.length; i++)\r\n             " +
"     e.highlighting[cols[i]] = reg;\r\n            }\r\n            else\r\n          " +
"     e.highlighting = reg;\r\n         }\r\n         catch (ex) { };\r\n      });\r\n   " +
"}\r\n</script>\r\n\r\n");

            
            #line 943 "..\..\Views\Home\Common.cshtml"
Write(Html.DevExpress().PopupControl(st =>
{
   st.Name = "popupPreview";
   st.Maximized = true;
   st.HeaderText = T("Xem in");
   st.Images.Header.IconID = IconID.PrintPreview32x32;
   st.Styles.Content.Paddings.Padding = 0;
   st.PopupAnimationType = AnimationType.Fade;
   st.SetContent(() =>
   {
      Html.RenderPartial("Preview", new ViewDataDictionary());
   });
}).GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 957 "..\..\Views\Home\Common.cshtml"
Write(Html.DevExpress().PopupControl(st =>
{
   st.Name = "popupMessageBoxInfo";
   st.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
   st.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
   st.Width = 300;
   st.ShowCloseButton = false;
   st.CloseAction = CloseAction.None;
   st.Modal = true;
   st.ShowFooter = true;
   st.HeaderText = T("Hệ thống");
   st.Images.Header.IconID = IconID.SupportInfo16x16;
   st.SetContent(() =>
   {
      ViewContext.Writer.WriteLine("<div class='messagebox'><div class='img infomation'></div><div id='messageinfo' class='msg'></div><div class='dx-clear'></div></div>");
   });

   st.Styles.Footer.HorizontalAlign = HorizontalAlign.Center;
   st.SetFooterContentTemplateContent(c =>
   {
      Html.DevExpress().Button(btn =>
      {
         btn.Name = "btnCloseMessageBoxInfo";
         btn.UseSubmitBehavior = false;
         btn.Text = T("Đóng");
         btn.Images.Image.IconID = IconID.ActionsClose16x16;
         btn.CausesValidation = false;
         btn.ClientSideEvents.Click = "function(s,e) {popupMessageBoxInfo.Hide(); popupMessageBoxInfo._deffered && popupMessageBoxInfo._deffered.resolve();}";
      }).Render();
   });

   st.ClientSideEvents.Shown = "function(s,e) {btnCloseMessageBoxInfo.Focus();}";
}).GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n\r\n");

            
            #line 993 "..\..\Views\Home\Common.cshtml"
Write(Html.DevExpress().PopupControl(st =>
{
   st.Name = "popupMessageBoxConfirm";
   st.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
   st.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
   st.Width = 400;
   st.ShowCloseButton = false;
   st.CloseAction = CloseAction.None;
   st.Modal = true;
   st.ShowFooter = true;
   st.HeaderText = T("Hệ thống");
   st.Images.Header.IconID = IconID.SupportQuestion16x16;
   st.SetContent(() =>
   {
      ViewContext.Writer.WriteLine("<div class='messagebox'><div class='img alert'></div><div id='messageconfirm' class='msg'></div><div class='dx-clear'></div></div>");
   });

   st.Styles.Footer.HorizontalAlign = HorizontalAlign.Center;
   st.SetFooterContentTemplateContent(c =>
   {
      Html.DevExpress().Button(btn =>
      {
         btn.Name = "btnOkMessageBoxConfirm";
         btn.UseSubmitBehavior = false;
         btn.Text = T("Đồng ý");
         btn.Images.Image.IconID = IconID.ActionsApply16x16;
         btn.CausesValidation = false;
         btn.ClientSideEvents.Click = "function(s,e) {popupMessageBoxConfirm.Hide(); popupMessageBoxConfirm._deffered && popupMessageBoxConfirm._deffered.resolve();}";
      }).Render();

      Html.DevExpress().Button(btn =>
      {
         btn.Name = "btnCancelMessageBoxConfirm";
         btn.UseSubmitBehavior = false;
         btn.Text = T("Không");
         btn.Images.Image.IconID = IconID.ActionsCancel16x16;
         btn.CausesValidation = false;
         btn.ClientSideEvents.Click = "function(s,e) {popupMessageBoxConfirm.Hide(); popupMessageBoxConfirm._deffered && popupMessageBoxConfirm._deffered.reject();}";
      }).Render();
   });

   st.ClientSideEvents.Shown = "function(s,e) {btnOkMessageBoxConfirm.Focus();}";
}).GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n");

            
            #line 1038 "..\..\Views\Home\Common.cshtml"
Write(Html.DevExpress().LoadingPanel(st =>
{
   st.Name = "panelLoading";
   st.Modal = true;
   st.Text = T("Đang xử lý");
}).GetHtml());

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 1045 "..\..\Views\Home\Common.cshtml"
Write(Html.DevExpress().Hint(st =>
{
   st.Name = "ErrorHint";
   st.AllowFlip = true;
   st.TargetSelector = "img[class^=\"dxEditors_edtError_\"]";
   st.Position = HintPosition.Bottom;
}).GetHtml());

            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
