//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace WebModule.MCNV.DataModel
{

    /// <summary>
    /// Thông tin cán bộ y tế
    /// </summary>
    public partial class Doctor : CompanyObject
    {
        string fCode;
        [ColumnDefaultValue("")]
        public string Code
        {
            get { return fCode; }
            set { SetPropertyValue<string>(nameof(Code), ref fCode, value); }
        }
        string fName;
        [ColumnDefaultValue("")]
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>(nameof(Name), ref fName, value); }
        }
        Gender fGender;
        [ExplicitLoading(1)]
        public Gender Gender
        {
            get { return fGender; }
            set { SetPropertyValue<Gender>(nameof(Gender), ref fGender, value); }
        }
        DateTime? fDateBirth;
        public DateTime? DateBirth
        {
            get { return fDateBirth; }
            set { SetPropertyValue<DateTime?>(nameof(DateBirth), ref fDateBirth, value); }
        }
        string fPhone;
        [ColumnDefaultValue("")]
        public string Phone
        {
            get { return fPhone; }
            set { SetPropertyValue<string>(nameof(Phone), ref fPhone, value); }
        }
        string fEmail;
        [ColumnDefaultValue("")]
        public string Email
        {
            get { return fEmail; }
            set { SetPropertyValue<string>(nameof(Email), ref fEmail, value); }
        }
        Facility fFacility;
        [ExplicitLoading(1)]
        public Facility Facility
        {
            get { return fFacility; }
            set { SetPropertyValue<Facility>(nameof(Facility), ref fFacility, value); }
        }
        Qualification fQualification;
        [ExplicitLoading(1)]
        public Qualification Qualification
        {
            get { return fQualification; }
            set { SetPropertyValue<Qualification>(nameof(Qualification), ref fQualification, value); }
        }
        DoctorTitle fTitle;
        [ExplicitLoading(1)]
        public DoctorTitle Title
        {
            get { return fTitle; }
            set { SetPropertyValue<DoctorTitle>(nameof(Title), ref fTitle, value); }
        }
        string fNote;
        [Size(SizeAttribute.Unlimited)]
        public string Note
        {
            get { return fNote; }
            set { SetPropertyValue<string>(nameof(Note), ref fNote, value); }
        }
        Specialize fSpecialize;
        [ExplicitLoading(1)]
        public Specialize Specialize
        {
            get { return fSpecialize; }
            set { SetPropertyValue<Specialize>(nameof(Specialize), ref fSpecialize, value); }
        }
        DoctorPosition fPosition;
        public DoctorPosition Position
        {
            get { return fPosition; }
            set { SetPropertyValue<DoctorPosition>(nameof(Position), ref fPosition, value); }
        }
        [Association(@"MedicalDoctors", UseAssociationNameAsIntermediateTableName = true)]
        public XPCollection<Medical> Medicals { get { return GetCollection<Medical>(nameof(Medicals)); } }
        [Association(@"MedicalEndDoctors", UseAssociationNameAsIntermediateTableName = true)]
        public XPCollection<Medical> EndProcess { get { return GetCollection<Medical>(nameof(EndProcess)); } }
        [Association(@"MedicalPlanDoctors", UseAssociationNameAsIntermediateTableName = true)]
        public XPCollection<Medical> Plans { get { return GetCollection<Medical>(nameof(Plans)); } }
        [Association(@"MedicalProcessDoctors", UseAssociationNameAsIntermediateTableName = true)]
        public XPCollection<MedicalProcess> MedicalProcesses { get { return GetCollection<MedicalProcess>(nameof(MedicalProcesses)); } }
    }

}
