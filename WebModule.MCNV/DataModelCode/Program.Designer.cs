//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace WebModule.MCNV.DataModel
{

    /// <summary>
    /// Chương trình đào tạo
    /// </summary>
    public partial class Program : CompanyObject
    {
        ProgramProject fProject;
        [ExplicitLoading(1)]
        public ProgramProject Project
        {
            get { return fProject; }
            set { SetPropertyValue<ProgramProject>(nameof(Project), ref fProject, value); }
        }
        Specialize fSpecialize;
        [ExplicitLoading(1)]
        public Specialize Specialize
        {
            get { return fSpecialize; }
            set { SetPropertyValue<Specialize>(nameof(Specialize), ref fSpecialize, value); }
        }
        Institution fInstitution;
        [ExplicitLoading(1)]
        public Institution Institution
        {
            get { return fInstitution; }
            set { SetPropertyValue<Institution>(nameof(Institution), ref fInstitution, value); }
        }
        DateTime? fDateStart;
        public DateTime? DateStart
        {
            get { return fDateStart; }
            set { SetPropertyValue<DateTime?>(nameof(DateStart), ref fDateStart, value); }
        }
        DateTime? fDateEnd;
        public DateTime? DateEnd
        {
            get { return fDateEnd; }
            set { SetPropertyValue<DateTime?>(nameof(DateEnd), ref fDateEnd, value); }
        }
        string fTrainingTime;
        public string TrainingTime
        {
            get { return fTrainingTime; }
            set { SetPropertyValue<string>(nameof(TrainingTime), ref fTrainingTime, value); }
        }
        string fNote;
        [Size(SizeAttribute.Unlimited)]
        public string Note
        {
            get { return fNote; }
            set { SetPropertyValue<string>(nameof(Note), ref fNote, value); }
        }
        string fName;
        [Size(SizeAttribute.Unlimited)]
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>(nameof(Name), ref fName, value); }
        }
        string fNameEnglish;
        [Size(SizeAttribute.Unlimited)]
        public string NameEnglish
        {
            get { return fNameEnglish; }
            set { SetPropertyValue<string>(nameof(NameEnglish), ref fNameEnglish, value); }
        }
        WebModule.MCNV.Models.ProgramTypeEnum fProgramType;
        public WebModule.MCNV.Models.ProgramTypeEnum ProgramType
        {
            get { return fProgramType; }
            set { SetPropertyValue<WebModule.MCNV.Models.ProgramTypeEnum>(nameof(ProgramType), ref fProgramType, value); }
        }
        int fTrainingHour;
        public int TrainingHour
        {
            get { return fTrainingHour; }
            set { SetPropertyValue<int>(nameof(TrainingHour), ref fTrainingHour, value); }
        }
        Facility fFacility;
        public Facility Facility
        {
            get { return fFacility; }
            set { SetPropertyValue<Facility>(nameof(Facility), ref fFacility, value); }
        }
        int fDoctorsCount;
        public int DoctorsCount
        {
            get { return fDoctorsCount; }
            set { SetPropertyValue<int>(nameof(DoctorsCount), ref fDoctorsCount, value); }
        }
        [ExplicitLoading(1)]
        [Association(@"ProgramAttachments", UseAssociationNameAsIntermediateTableName = true)]
        public XPCollection<Attachment> Attachments { get { return GetCollection<Attachment>(nameof(Attachments)); } }
        [ExplicitLoading(1)]
        [Association(@"ProgramDoctorReferencesProgram"), Aggregated]
        public XPCollection<ProgramDoctor> Doctors { get { return GetCollection<ProgramDoctor>(nameof(Doctors)); } }
    }

}
