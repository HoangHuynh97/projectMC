#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.UI.WebControls;
    using System.Web.WebPages;
    using DevExpress.Utils;
    using DevExpress.Web;
    using DevExpress.Web.ASPxThemes;
    using DevExpress.Web.Mvc;
    using DevExpress.Web.Mvc.UI;
    using WebModule.MCNV.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Medical/Process.cshtml")]
    public partial class _Views_Medical_Process_cshtml : WebApp.Core.BaseWebViewPage<MedicalProcess>
    {
        public _Views_Medical_Process_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Medical\Process.cshtml"
   
    var header = string.IsNullOrEmpty(Model.Name) ? T("") : "<div class='grid-noBottom'><div class='col-auto_xs-12'>" + T("Hồ sơ PHCN: ") + "</div><div class='col_xs-12'>" + Model.Name + "</div></div>";

            
            #line default
            #line hidden
WriteLiteral("\r\n<script>\r\n   $(function () {\r\n      function headerText(txt) {\r\n         var s " +
"= \'\';\r\n         if (!txt)\r\n            s = \'");

            
            #line 10 "..\..\Views\Medical\Process.cshtml"
            Write(H("Thêm hồ sơ PHCN"));

            
            #line default
            #line hidden
WriteLiteral("\';\r\n         else\r\n            s = \"<div class=\'grid-noBottom\'><div class=\'col-au" +
"to_xs-12\'>");

            
            #line 12 "..\..\Views\Medical\Process.cshtml"
                                                                   Write(T("Hồ sơ PHCN: "));

            
            #line default
            #line hidden
WriteLiteral("</div><div class=\'col_xs-12\'>\" + txt + \"</div></div>\";\r\n         $(\'#dialogContai" +
"nerdlgProcess .dxpc-headerText\').html(s);\r\n      }\r\n      headerText(\'");

            
            #line 15 "..\..\Views\Medical\Process.cshtml"
             Write(H(Model.Name));

            
            #line default
            #line hidden
WriteLiteral("\');\r\n\r\n      var data = ");

            
            #line 17 "..\..\Views\Medical\Process.cshtml"
            Write(Html.Raw(Json.Encode(Model)));

            
            #line default
            #line hidden
WriteLiteral(";\r\n      $.when(window.ko ||\r\n         $.ajax({\r\n            type: \'GET\',\r\n      " +
"      cache: true,\r\n            dataType: \'script\',\r\n            url: \'https://c" +
"dnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.min.js\',\r\n         " +
"})).done(function () {\r\n            function ListItem(d) { //d is MedicalProcess" +
".Process\r\n               this.id = d.Id;\r\n               this.name = ko.observab" +
"le(d.Name);\r\n               this.url = d.Url;\r\n               this.expanded = ko" +
".observable(false);\r\n               this.loaded = ko.observable(false);\r\n       " +
"     }\r\n            ListItem.prototype.toggle = function () {\r\n               th" +
"is.expanded(!this.expanded());\r\n               if (this.expanded() && !this.load" +
"ed()) {\r\n                  this.load();\r\n               }\r\n            };\r\n     " +
"       ListItem.prototype.load = function () {\r\n               var self = this;\r" +
"\n               var el = $(\'.processes-container .process-item[data-id=\"\' + this" +
".id + \'\"] .process-content\');\r\n               el.html(\'<div style=\"text-align: c" +
"enter;\"><div class=\"process-loading\"></div></div>\');\r\n               return WebA" +
"pp.ajax(this.url, null, \'get\').then(function (res) {\r\n                  el.html(" +
"res);\r\n                  self.loaded(true);\r\n               });\r\n            };\r" +
"\n\r\n            var viewModel = window.processModel = {\r\n               id: data." +
"Id,\r\n               locked: ko.observable(data.Locked),\r\n               canAdd: " +
"ko.observable(data.CanAdd),\r\n               changed: ko.observable(false),\r\n    " +
"           items: ko.observableArray(data.Processes.map(function (it) {\r\n       " +
"           return new ListItem(it);\r\n               })),\r\n               add: fu" +
"nction () {\r\n                  WebApp.ajax(\'");

            
            #line 57 "..\..\Views\Medical\Process.cshtml"
                          Write(Url.Action("AddProcess", "Medical"));

            
            #line default
            #line hidden
WriteLiteral("\', { id: this.id }).done(function (res) {\r\n                     viewModel.addItem" +
"(res);\r\n                  });\r\n               },\r\n               close: function" +
" () {\r\n                  WebApp.ajax(\'");

            
            #line 62 "..\..\Views\Medical\Process.cshtml"
                          Write(Url.Action("AddEnd", "Medical"));

            
            #line default
            #line hidden
WriteLiteral("\', { id: this.id }).done(function (res) {\r\n                     viewModel.addItem" +
"(res);\r\n                     viewModel.canAdd(false);\r\n                  });\r\n  " +
"             },\r\n               stop: function () {\r\n                  WebApp.aj" +
"ax(\'");

            
            #line 68 "..\..\Views\Medical\Process.cshtml"
                          Write(Url.Action("AddStop", "Medical"));

            
            #line default
            #line hidden
WriteLiteral("\', { id: this.id }).done(function (res) {\r\n                     viewModel.addItem" +
"(res);\r\n                     viewModel.canAdd(false);\r\n                  });\r\n  " +
"             },\r\n               facility: function () {\r\n                  WebAp" +
"p.ajax(\'");

            
            #line 74 "..\..\Views\Medical\Process.cshtml"
                          Write(Url.Action("AddFacilityProcess", "Medical"));

            
            #line default
            #line hidden
WriteLiteral(@"', { id: this.id }).done(function (res) {
                     viewModel.addItem(res);
                  });
               },
               addItem: function (res) {
                  var item = new ListItem(res);
                  viewModel.items.push(item);
                  setTimeout(function () {
                     item.toggle();
                  });
               },
               reload: function () {
                  if (!viewModel.id) return;
                  //remeber expanded
                  var exp = viewModel.items()
                     .filter(function (it) {
                        return it.expanded();
                     })
                     .map(function (it) {
                        return it.id;
                     });
                  //load data
                  WebApp.ajax('");

            
            #line 96 "..\..\Views\Medical\Process.cshtml"
                          Write(Url.Action("ProcessData", "Medical"));

            
            #line default
            #line hidden
WriteLiteral(@"', { id: this.id }).done(function (res) {
                     headerText(res.Name);
                     viewModel.locked(res.Locked);
                     viewModel.canAdd(res.CanAdd);
                     viewModel.items(res.Processes.map(function (it) {
                        return new ListItem(it);
                     }));
                     viewModel.changed(true);
                     //re expand
                     if (exp.length) {
                        setTimeout(function () {
                           viewModel.items().forEach(function (it) {
                              if (exp.indexOf(it.id) != -1) it.toggle();
                           });
                        })
                     }
                  });
               }
            };

            ko.applyBindings(viewModel, $('.processes-container')[0]);
            if (!viewModel.id)
               setTimeout(function () {
                  const info = viewModel.items()[0];
                  info.toggle();
               });
      });
   });
</script>
<script");

WriteLiteral(" type=\"text/html\"");

WriteLiteral(" id=\"tmplProcesses\"");

WriteLiteral(@">
   <div class=""process-items"" data-bind=""foreach: items"">
      <div class=""process-item"" data-bind=""css: {expanded: expanded}, attr: {'data-id': id}"">
         <div class=""header"" data-bind=""click: toggle"">
            <div class=""title"" data-bind=""text: name""></div>
            <div class=""actions"">
               <!-- ko if: expanded -->
");

WriteLiteral("               ");

            
            #line 132 "..\..\Views\Medical\Process.cshtml"
          Write(Html.Icon(IconID.ArrowsMoveup16x16));

            
            #line default
            #line hidden
WriteLiteral("\r\n               <!-- /ko -->\r\n               <!-- ko ifnot: expanded -->\r\n");

WriteLiteral("               ");

            
            #line 135 "..\..\Views\Medical\Process.cshtml"
          Write(Html.Icon(IconID.ArrowsMovedown16x16));

            
            #line default
            #line hidden
WriteLiteral(@"
               <!-- /ko -->
            </div>
         </div>
         <div class=""body"" data-bind=""visible: expanded"">
            <div class=""process-content""></div>
         </div>
      </div>
   </div>
   <div class=""actions"" data-bind=""if: canAdd"">
      <button class=""app-button"" data-bind=""click: add"">
");

WriteLiteral("         ");

            
            #line 146 "..\..\Views\Medical\Process.cshtml"
    Write(Html.Icon(IconID.ActionsAddfile16x16));

            
            #line default
            #line hidden
WriteLiteral("\r\n         <span>");

            
            #line 147 "..\..\Views\Medical\Process.cshtml"
          Write(H("Thêm can thiệp tại nhà"));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n      </button>\r\n      <button class=\"app-button\" data-bind=\"click: faci" +
"lity\">\r\n");

WriteLiteral("         ");

            
            #line 150 "..\..\Views\Medical\Process.cshtml"
    Write(Html.Icon(IconID.ActionsAdditem16x16));

            
            #line default
            #line hidden
WriteLiteral("\r\n         <span>");

            
            #line 151 "..\..\Views\Medical\Process.cshtml"
          Write(H("Thêm can thiệp tại viện"));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n      </button>\r\n      <button class=\"app-button\" data-bind=\"click: clos" +
"e\">\r\n");

WriteLiteral("         ");

            
            #line 154 "..\..\Views\Medical\Process.cshtml"
    Write(Html.Icon(IconID.ActionsApply16x16));

            
            #line default
            #line hidden
WriteLiteral("\r\n         <span>");

            
            #line 155 "..\..\Views\Medical\Process.cshtml"
          Write(H("Kết thúc can thiệp"));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n      </button>\r\n      <button class=\"app-button\" data-bind=\"click: stop" +
"\">\r\n");

WriteLiteral("         ");

            
            #line 158 "..\..\Views\Medical\Process.cshtml"
    Write(Html.Icon(IconID.ActionsCancel16x16));

            
            #line default
            #line hidden
WriteLiteral("\r\n         <span>");

            
            #line 159 "..\..\Views\Medical\Process.cshtml"
          Write(H("Dừng can thiệp"));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n      </button>\r\n   </div>\r\n</script>\r\n\r\n<style>\r\n   ");

WriteLiteral("@keyframes rotate {\r\n      0% {\r\n         transform: rotate(0);\r\n      }\r\n\r\n     " +
" 100% {\r\n         transform: rotate(360deg);\r\n      }\r\n   }\r\n\r\n\r\n   .processes-c" +
"ontainer {\r\n      min-height: 70vh;\r\n   }\r\n\r\n   .process-items {\r\n      margin-b" +
"ottom: 10px;\r\n   }\r\n\r\n   .process-loading {\r\n      height: 48px;\r\n      width: 4" +
"8px;\r\n      color: rgba(90, 90, 90, 0.2);\r\n      position: relative;\r\n      disp" +
"lay: inline-block;\r\n      border: 5px solid;\r\n      border-radius: 50%;\r\n      b" +
"order-right-color: #5a5a5a;\r\n      animation: rotate 1s linear infinite;\r\n   }\r\n" +
"\r\n\r\n   .process-item {\r\n      background-color: #fff;\r\n      border: 1px solid #" +
"ccc;\r\n   }\r\n\r\n      .process-item.expanded {\r\n         box-shadow: 0px 2px 2px r" +
"gba(0,0,0,0.1);\r\n      }\r\n\r\n      .process-item > .header {\r\n         display: f" +
"lex;\r\n         flex-direction: row;\r\n         align-items: center;\r\n         pad" +
"ding: 10px;\r\n         cursor: pointer;\r\n      }\r\n\r\n      .process-item.expanded " +
"> .header {\r\n         border-bottom: 1px solid #ddd;\r\n         box-shadow: 0 0 4" +
"px rgba(0,0,0,0.1);\r\n         background-color: #eee;\r\n      }\r\n\r\n      .process" +
"-item > .header:hover {\r\n         background-color: rgba(0,0,0,0.1);\r\n      }\r\n\r" +
"\n      .process-item > .header .title {\r\n         color: #505050;\r\n         font" +
"-weight: bold;\r\n         flex: 1;\r\n      }\r\n\r\n      .process-item > .body {\r\n   " +
"      padding: 10px 20px;\r\n      }\r\n\r\n   .processes-container .actions button {\r" +
"\n      padding: 5px 10px;\r\n      outline: none;\r\n      margin-right: 10px;\r\n    " +
"  cursor: pointer;\r\n   }\r\n</style>\r\n\r\n<div");

WriteLiteral(" class=\"processes-container pb\"");

WriteLiteral(" data-bind=\"template: \'tmplProcesses\'\"");

WriteLiteral("></div>");

        }
    }
}
#pragma warning restore 1591
