<div class="page-container">
   <div class="page-header grid-middle">
      <div class="mr">@Html.Icon(IconID.ProgrammingProjectfile32x32)</div>
      <div class="title">
         @H("Khóa đào tạo")
      </div>
   </div>
   <div class="page-content">
      <form>
         @Html.Partial("IndexPartial")
      </form>
   </div>
</div>

<script type="text/javascript">
   WebApp.function = {
      title: '@H("Khóa đào tạo")',
      permission: {
         add: @CheckPermission("Thêm").ToString().ToLower(),
         edit: @CheckPermission("Sửa").ToString().ToLower(),
         del: @CheckPermission("Xóa").ToString().ToLower(),
      },
      add: function () {
         if (WebApp.loading() || !WebApp.function.permission.add) return;
         WebApp.showDialog({
            title: '@H("Thêm dữ liệu")',
            width: 800,
            url: '@Url.Action("Add")',
            beforeSubmit: function () {
               $('#AttachmentsUpdated').val(JSON.stringify(AttachmentListAttachments.GetChanged()));
            },
         }).done(function(v) {
            grdSheet.PerformCallback();
         });
      },
      edit: function () {
         if (WebApp.loading() || !WebApp.function.permission.edit) return;
         var idx = grdSheet.GetFocusedRowIndex();
         var id = grdSheet.GetRowKey(idx);
         if (!id) return;
         WebApp.showDialog({
            title: '@H("Cập nhật dữ liệu")',
            width: 800,
            icon: '@IconID.EditEdit32x32',
            url: '@Url.Action("Edit")',
            data: { id: id },
            beforeSubmit: function () {
               $('#AttachmentsUpdated').val(JSON.stringify(AttachmentListAttachments.GetChanged()));
            },
         }).done(function (v) {
            grdSheet.PerformCallback();
         });
      },
      view: function () {
         var idx = grdSheet.GetFocusedRowIndex();
         var id = grdSheet.GetRowKey(idx);
         if (!id) return;
         WebApp.showDialog({
            title: '@H("Thông tin chương trình")',
            width: 800,
            icon: '@IconID.ActionsNew32x32',
            url: '@Url.Action("ViewInfo")',
            data: { id: id },
            buttons: [],
         });
      },
      del: function () {
         if (WebApp.loading() || !WebApp.function.permission.del) return;
         var idx = grdSheet.GetFocusedRowIndex();
         var id = grdSheet.GetRowKey(idx);
         if (!id) return;
         WebApp.showConfirm(WebApp.message.delete, WebApp.message.deleteConfirm).done(function (r) {
            WebApp.ajax('@Url.Action("Delete")', {id: id}).done(function() {
               grdSheet.PerformCallback();
            });
         });
      },
      export: function () {
         grdSheet.ExportTo(ASPxClientGridViewExportFormat.Xlsx);
      },
      filter: function () {
         grdSheet._showFilter = !(grdSheet._showFilter || false);
         grdSheet.PerformCallback();
      },
      hotkey: {
         f2: function() { WebApp.function.add(); },
         f3: function() { WebApp.function.edit(); },
         f4: function() { WebApp.function.del(); },
         f5: function () { grdSheet.PerformCallback(); },
         esc: function () { WebApp.function.close(); },
      },
      resize: function () {
         $('.page-content').height($('.page-container').height() - $('.page-header').height());
         grdSheet.SetHeight($('.page-content').innerHeight());
      },
      close: WebApp.closeFunction.bind(WebApp),
      update: function() {
         var idx = grdSheet.GetFocusedRowIndex();
         var tool = grdSheet.GetToolbar(0);
         tool.GetItemByName("edit").SetEnabled(idx !== -1);
         tool.GetItemByName("del").SetEnabled(idx !== -1);
      }
   };
</script>