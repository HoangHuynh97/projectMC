@model int?
@{
   var name = ViewData.ModelMetadata.PropertyName;
   var caption = T(ViewData.ModelMetadata.DisplayName);
}
<script>
   function onNewPatient() {
      WebApp.showDialog({
         title: '@H("Thêm bệnh nhân")',
         url: '@Url.Action("Add", "Patient")',
         width: 1000,
      }).done(function (r) {
         const ctrl = @name;
         ctrl._newValue = r;
         ctrl.SetText(r.Name);
         ctrl.filterStrategy.Filtering();
      });
   }
   function onEndCallbackPatient(s) {
      if (s._newValue) {
         var r = s._newValue;
         delete s._newValue;
         setTimeout(function () { s.SetValue(r.Id); });
      }
   }
</script>
@Html.DevExpress().ComboBoxFor(m => m, st =>
{
   st.DefaultSettings();
   st.CallbackRouteValues = new { Action = "Patient", Controller = "Combobox" };
   st.Properties.ValueField = "Oid";
   st.Properties.ValueType = typeof(int);
   st.Properties.Caption = caption;
   st.Properties.CallbackPageSize = 20;
   if (ViewData.ModelMetadata.IsRequired)
      st.Properties.CaptionSettings.RequiredMarkDisplayMode = EditorRequiredMarkMode.Required;
   st.Properties.TextFormatString = "{1}";
   st.Properties.NullText = T("Tìm theo mã, tên, CMND, CCCD, BHYT, điện thoại");
   st.Properties.Columns.Add("Code", T("Mã")).Width = 50;
   st.Properties.Columns.Add("Name", T("Tên"));
   if (CheckPermission("Thông tin NKT", "Thêm"))
   {
      var btn = st.Properties.Buttons.Add();
      btn.Image.IconID = IconID.ActionsAdd16x16;
      btn.ToolTip = T("Thêm");
      st.Properties.ClientSideEvents.ButtonClick = "onNewPatient";
      st.Properties.ClientSideEvents.EndCallback = "onEndCallbackPatient";
   }
}).BindList(Patient.ComboboxData()).GetHtml()
